{"version":3,"sources":["components/Frontend.js","App.js","index.js"],"names":["Frontend","props","handleInputChange","event","setState","formText","target","term","sendDataUpstream","data","state","webSocket","send","JSON","stringify","console","log","listnersAdded","isSendingData","this","setupWebSocket","WebSocket","onmessage","e","parse","alert","onclose","error","a","isTracking","message","className","name","onChange","type","onClick","sendMessage","Component","App","is_production","window","component","reactRoot","document","getElementById","ref","element","reactComponent","ReactDOM","render"],"mappings":"0OAkFeA,E,kDA9EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8CVC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEC,SAAUF,EAAMG,OAAOC,QAhDtB,EAmDnBC,iBAAmB,SAACC,GAChB,EAAKC,MAAMC,UAAUC,KAAKC,KAAKC,UAAU,CACrC,IAAO,+BACP,KAAOL,MApDXM,QAAQC,IAAI,uBAEZ,EAAKN,MAAQ,CACTO,eAAe,EACfC,eAAe,EACfb,SAAS,GACTM,UAAW,IARA,E,qDAYnB,WACIQ,KAAKC,mB,4BAGT,WACI,IAGMT,EAAY,IAAIU,UAFL,yBAIjBF,KAAKf,SAAS,CAAEO,UAAUA,IAG1BA,EAAUW,UAAY,SAACC,GACnB,IAAId,EAAOI,KAAKW,MAAMD,EAAEd,MACxBM,QAAQC,IAAIP,GACZgB,MAAMhB,IAGVE,EAAUe,QAAU,SAACH,GACjBR,QAAQY,MAAM,mCACdZ,QAAQY,MAAMJ,M,gEAItB,sBAAAK,EAAA,sDAEIT,KAAKf,SAAS,CACVyB,YAAY,EACZxB,SAAU,KAGdc,KAAKX,iBAAiB,CAAEsB,QAAQ,sBAAuB,GAAO,GAPlE,gD,0EAqBA,WACI,OACE,sBAAKC,UAAU,SAAf,UACE,mEACA,iCACA,mCACG,gCACE,uBAAOC,KAAK,OAAOC,SAAUd,KAAKjB,wBAGtC,wBAAQgC,KAAK,SAASC,QAAShB,KAAKiB,YAApC,8B,GArEUC,aCqBRC,E,4JAfb,WACE,OACE,qBAAKP,UAAU,YAAf,SACE,cAAC,EAAD,CACAQ,cAAepB,KAAKlB,MAAMsC,sB,GANhBF,aCYlBG,OAAOC,UAAYD,OAAOC,WAAa,MACvCD,OAAOE,UAAYF,OAAOE,WAAaC,SAASC,eAAe,SAC/DJ,OAAOvC,MAAQuC,OAAOvC,OAAS,GAG/B,IAAMsC,EAAiB,kBAAmBC,OAAOvC,SAAWuC,OAAOvC,MAAMsC,cAMzEC,OAAOvC,MAAM4C,IAAM,SAACC,GAClBN,OAAOO,eAAiBD,GAG1BE,IAASC,OACL,cAAC,EAAD,CAAKV,cAAeA,IACpBI,SAASC,eAAe,Y","file":"static/js/main.4475517f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Frontend extends Component {\n    constructor(props) {\n        super(props);\n        console.log(\"Frontend loaded....\");\n        // User variable from django if applicable\n        this.state = {\n            listnersAdded: false,\n            isSendingData: false,\n            formText:\"\",\n            webSocket: {},\n        };\n    }\n\n    componentDidMount(){\n        this.setupWebSocket();\n    }\n\n    setupWebSocket(){\n        const domain = 'localhost';\n        var socketPath = \"wss://\"+ domain + \":8000/\";\n\n        const webSocket = new WebSocket(socketPath);\n\n        this.setState({ webSocket:webSocket });\n\n        // Received downstream websocket message\n        webSocket.onmessage = (e) => {\n            var data = JSON.parse(e.data);\n            console.log(data);\n            alert(data);\n        };\n\n        webSocket.onclose = (e) => {\n            console.error('Chat socket closed unexpectedly');\n            console.error(e);\n        };\n    }\n\n    async sendMessage(){\n        // Clear previous data\n        this.setState({\n            isTracking: true,\n            formText: \"\"\n        });\n\n        this.sendDataUpstream({ message:\"Tracking starts..\" }, false, true);\n    }\n\n    handleInputChange = (event) => {\n      this.setState({ formText: event.target.term })\n    }\n\n    sendDataUpstream = (data) => {\n        this.state.webSocket.send(JSON.stringify({\n            'msg': 'This has been send upstream!',\n            'data':data\n        }));\n    }\n\n    render() {\n        return(\n          <div className=\"center\">\n            <h1>Fill our message to send upstream</h1>\n            <form>\n            <fieldset>\n               <label>\n                 <input name=\"name\" onChange={this.handleInputChange}/>\n               </label>\n             </fieldset>\n             <button type=\"submit\" onClick={this.sendMessage}>Submit</button>\n            </form>\n          </div>\n        )\n    }\n\n}\nFrontend.propTypes = {\n    is_production: PropTypes.bool.isRequired\n}\nexport default Frontend;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport Frontend from './components/Frontend'\n\n\n// Button From: https://reactjsexample.com/simple-react-component-for-a-circular-progress-button/\n// State in parent component & explantion 2 editor: https://stackoverflow.com/questions/43001280/accessing-draftjs-output-from-parent\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"react_app\">\n        <Frontend\n        is_production={this.props.is_production}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n    is_production: PropTypes.bool.isRequired,\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n/**\n * Maintain a simple map of React components to make it easier\n * for Django to reference individual components\n */\nconst pages = {\n  App,\n}\n\n/**\n * If Django hasn't injected these properties into the HTML\n * template that's loading this script then we're viewing it\n * via the create-react-app liveserver\n */\nwindow.component = window.component || 'App';\nwindow.reactRoot = window.reactRoot || document.getElementById('react');\nwindow.props = window.props || { };\n\n// Check if production for websocket\nconst is_production = ('is_production' in window.props) ? !!window.props.is_production : false;\n\n// To acces the component for inserting new contentState\n// Source 1: https://stackoverflow.com/questions/31612598/call-a-react-component-method-from-outside\n// Source 2: https://stackoverflow.com/questions/24841855/how-to-access-component-methods-from-outside-in-reactjs\n// Source 3: https://reactjs.org/docs/refs-and-the-dom.html#adding-a-ref-to-a-class-component\nwindow.props.ref = (element) => {\n  window.reactComponent = element\n}\n\nReactDOM.render(\n    <App is_production={is_production} />,\n    document.getElementById('react')\n);\n"],"sourceRoot":""}